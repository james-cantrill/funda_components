programs_manager Definition

	programs_manager
		Definition: 
			The programs_manager is a Funda component exposing the actions (functions) needed to manage an organization's  programs. A program is used by an organization or group of organizations use to organize their transactions and other interactions. In a social service agency a program could be a single funded project providing a defined range of services, in a local government a program could be a single department or a limited project,and in a business a program could be a single business unit. What a program represents depends on how an organization needs to define its business structure.
			
			The programs_manager component uses a Program entity to represent the organizations programs.
			
			The programs_manager component uses an Organization entity as the owner of one or more programs. The Organization entity could represent a legal corporation, an association, a professional group or other entities that conduct transactions.

			Since organizations need a flexible way of structuring their programs the programs_manager component uses an intermediate Organizational Level entity to provide the organization's defined structure. 
			
			
		Entities managed and their visible properties: 
			organization
				organization_name	text,
				organization_description
				
			organization_level
				organization_level_name,
				organization_level_display_name	
				organization_level_description
				
			program
				program_name
				program_description

	Actions exposed:
			list_user_visible_programs
			list_user_visible_organizations
			available only to administrators:
				change_program_user_visibility
				change_organization_user_visibility
				enter_edit_organization_levels
				enter_edit_programs
		Depencencies:
			programs_manager_manager
		Schema Name:
			programs_manager_schema

	Action patterns
	
		change_program_user_visibility patterns
		
			input pattern
			{
				micro_service:	programs_manager,
				action:	change_program_user_visibility,
				user_data:	{
								login:
								service:
								program:
								task:	//visible (set programs_manager_schema.programs_manager_allowed_programs.program_accessible to TRUE) or not_visible (set programs_manager_schema.programs_manager_allowed_programs.program_accessible to FALSE)
								changing_user_login:
							}
			};
			
			output json
			{
				result_indicator:
				message:
				login:
				service:
				program_id:
				program_name:
				visible:
				changing_user_login:
			}		
						
		list_user_visible_programs patterns
		
			input pattern
			{
				micro_service:	programs_manager,
				action:	list_user_visible_programs,
				user_data:	{
								login:
							}
			};
			
			output json
				{
				result_indicator:
				message:
				login:
				reports: [
						{
							program_id:
							program_name:
						}
					]
			}								
			
		change_organization_user_visibility patterns
		
			input pattern
			{
				micro_service:	programs_manager,
				action:	change_organization_user_visibility,
				user_data:	{
								login:
								service:
								organization:
								task:	//visible (set programs_manager_schema.programs_manager_allowed_programs.program_accessible to TRUE) or not_visible (set programs_manager_schema.programs_manager_allowed_programs.program_accessible to FALSE)
								changing_user_login:
							}
			};
			
			output json
			{
				result_indicator:
				message:
				login:
				service:
				program_id:
				agency:
				visible:
				changing_user_login:
			}		

		list_user_visible_organizations patterns
		
			input pattern
			{
				micro_service:	programs_manager,
				action:	list_user_visible_organizations,
				user_data:	{
								login:
							}
			};
			
			output json
				{
				result_indicator:
				message:
				login:
				organizations: [
						{
							organization_id:
							organization_name:
						}
					]
			}								
			
			
